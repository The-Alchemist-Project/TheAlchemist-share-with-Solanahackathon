{"id":"app/components/GenericTrading.js","dependencies":[{"name":"/Users/lamtnb/js/trading-FE/src/.babelrc","includedInParent":true,"mtime":1602864521241},{"name":"/Users/lamtnb/js/trading-FE/package.json","includedInParent":true,"mtime":1602906532260},{"name":"react","loc":{"line":1,"column":43},"parent":"/Users/lamtnb/js/trading-FE/src/app/components/GenericTrading.js","resolved":"/Users/lamtnb/js/trading-FE/node_modules/react/index.js"},{"name":"lightweight-charts","loc":{"line":2,"column":28},"parent":"/Users/lamtnb/js/trading-FE/src/app/components/GenericTrading.js","resolved":"/Users/lamtnb/js/trading-FE/node_modules/lightweight-charts/dist/lightweight-charts.esm.production.js"},{"name":"axios","loc":{"line":3,"column":18},"parent":"/Users/lamtnb/js/trading-FE/src/app/components/GenericTrading.js","resolved":"/Users/lamtnb/js/trading-FE/node_modules/axios/index.js"},{"name":"socket.io-client","loc":{"line":4,"column":15},"parent":"/Users/lamtnb/js/trading-FE/src/app/components/GenericTrading.js","resolved":"/Users/lamtnb/js/trading-FE/node_modules/socket.io-client/lib/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _lightweightCharts = require(\"lightweight-charts\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _socket = _interopRequireDefault(require(\"socket.io-client\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst symbols = ['HITBTC:BNBBTC', 'BINANCE:BNBTUSD', 'OTC:SBYSF', \"AMEX:DJP\", 'BYBIT:ETHUSD'];\n\nfunction GenericTrading() {\n  const [didMount, setDidMount] = (0, _react.useState)(false);\n  const [count, setCount] = (0, _react.useState)(0);\n  const chartProperties = {\n    height: 500,\n    timeScale: {\n      timeVisible: true,\n      secondsVisible: false\n    }\n  };\n  (0, _react.useEffect)(() => {\n    const domElement = document.getElementById('tvchart');\n    const chart = (0, _lightweightCharts.createChart)(domElement, chartProperties);\n    const candleSeries = chart.addCandlestickSeries();\n\n    const socket = _socket.default.connect('http://127.0.0.1:4000/');\n\n    socket.on('KLINE', pl => {\n      console.log(pl);\n      candleSeries.update(pl);\n    }); // axios\n    //   .get(`https://api.binance.com/api/v3/klines?symbol=BTCUSDT&interval=1m&limit=1000`)\n    //   .then(response => {\n    //     const data = response.data.map(d => {\n    //       return {\n    //         time: d[0] / 1000,\n    //         open: parseFloat(d[1]),\n    //         high: parseFloat(d[2]),\n    //         low: parseFloat(d[3]),\n    //         close: parseFloat(d[4])\n    //       }\n    //     });\n    //     console.log('data', data)\n    //     const chart = createChart(document.getElementById('tvchart'), chartProperties);\n    //     const candleSeries = chart.addCandlestickSeries();\n    //     candleSeries.setData(data);\n    //   })\n  }, []); // useEffect(() => {\n  //   const script = document.createElement('script');\n  //   script.src = 'https://s3.tradingview.com/tv.js';\n  //   script.async = true;\n  //   script.type = \"text/javascript\";\n  //   script.innerHTML = new window.TradingView.widget({\n  //     \"width\": '100%',\n  //     \"height\": 500,\n  //     \"symbol\": `${symbols[count % symbols.length]}`,\n  //     \"interval\": \"D\",\n  //     \"timezone\": \"America/Los_Angeles\",\n  //     \"theme\": \"light\",\n  //     \"style\": \"1\",\n  //     \"locale\": \"en\",\n  //     \"toolbar_bg\": \"#f1f3f6\",\n  //     \"enable_publishing\": false,\n  //     \"save_image\": false,\n  //     \"watchlist\": [\n  //       \"HITBTC:BNBBTC\",\n  //       \"BINANCE:BNBTUSD\",\n  //       \"OTC:SBYSF\",\n  //       \"AMEX:DJP\",\n  //       \"BYBIT:ETHUSD\"\n  //     ],\n  //     \"container_id\": \"trading-tv\",\n  //   })\n  //   document.getElementById(\"tradingview-widget-container\").appendChild(script);\n  // }, [count]);\n  // useEffect(() => {\n  //   if (didMount) {\n  //     // var doc = document.getElementById('trading').contents();\n  //     // console.log('doc>>>>>>>>>>>>>>>>>>>', doc.find('body'))\n  //     // doc.open();\n  //     // doc.write('Test>>>>>>>>>>>>>>>>>>>>>>>');\n  //     // doc.close();\n  //   }\n  // }, [didMount])\n\n  const handleChange = () => {\n    setCount(count + 1);\n  };\n\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    id: \"tradingview-widget-container\"\n  }, /*#__PURE__*/_react.default.createElement(\"button\", {\n    onClick: handleChange\n  }, \"Change Symbol\"), /*#__PURE__*/_react.default.createElement(\"div\", {\n    id: \"tvchart\"\n  }));\n}\n\nvar _default = GenericTrading;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"5b00e8a47a73afa3ceb84ee7f428930a","cacheData":{"env":{}}}